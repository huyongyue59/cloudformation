    #AWSTemplateFormatVersion: 2010-09-09
    # Description: |

    Parameters:
      Co:
        Type: String
        Default: Qlite
      
      Env:
        Type: String
        Default: Dev
        AllowedValues:
          - Dev #开发
          - Prod #本番
          - Test #测试
          - Stating #最终测试
          - Poc # 检证

      Author:
        Type: String
        Default: hyy2


      keypair:
        Type: AWS::EC2::KeyPair::KeyName
        Default: infra-hyy

      instancetype:
        Type: String
        Default: t2.micro
        AllowedValues:
          - t2.micro
          - t1.micro 
          - t3.micro
      Co:
          Type: String
          Default: Qlite
        
      Env:
        Type: String
        Default: Dev
        AllowedValues:
          - Dev #开发
          - Prod #本番
          - Test #测试
          - Stating #最终测试
          - Poc # 检证

      Author:
        Type: String
        Default: hyy2

    Mappings:


      # cidr:
      #   a:
      #     pub1a: 10.0.0.0/24
      #     pri1a: 10.0.1.0/24
      #     # nat1a: 10.0.2.0/24

      #   c:
      #     pub1c: 10.0.3.0/24
      #     pri1c: 10.0.4.0/24
      #     # nat1c: 10.0.5.0/24

      #   vpc:
      #     vpc: 10.0.0.0/16
      env:
        id:
            '111111121111' : dev
            '125868895458' : prod
            '111111111111' : test
     
      dev:
        a:
          pub1a: 10.0.0.0/24
          pri1a: 10.0.1.0/24
          # nat1a: 10.0.2.0/24

        c:
          pub1c: 10.0.3.0/24
          pri1c: 10.0.4.0/24
          # nat1c: 10.0.5.0/24

        vpc:
          vpccider: 10.0.0.0/16

      test:
        a:
          pub1a: 10.255.0.0/24
          pri1a: 10.255.1.0/24
          # nat1a: 10.255.2.0/24

        c:
          pub1c: 10.255.3.0/24
          pri1c: 10.255.4.0/24
          # nat1c: 10.255.5.0/24

        vpc:
          vpccider: 10.255.0.0/16

      prod: 
        a:
          pub1a: 10.100.0.0/24
          pri1a: 10.100.1.0/24
          # nat1a: 100.0.2.0/24

        c:
          pub1c: 10.100.3.0/24
          pri1c: 10.100.4.0/24
          # nat1c: 100.0.5.0/24

        vpc:
          vpccider: 10.100.0.0/16


    Conditions:
        createngw:
          !Equals [!FindInMap [ env, id, !Ref 'AWS::AccountId' ], prod]

    Resources:
      # vpc

      vpc:
        Type: AWS::EC2::VPC
        Properties:
          CidrBlock: !FindInMap [ !FindInMap [ env, id, !Ref 'AWS::AccountId' ],vpc,vpccider]
          Tags: 
           - Key: Name
             Value: !Sub ${Co}-${Env}-${Author}-vpc
    # igw
      igw:
        Type: AWS::EC2::InternetGateway
        Properties:
          Tags: 
           - Key: Name
             Value: !Sub ${Co}-${Env}-${Author}-igw
    # igw attach 
      vpcAttach:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
          InternetGatewayId: !Ref igw
          VpcId: !Ref vpc # Required


      

    # subnet 
      pub1a:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone: "ap-northeast-1a"
          CidrBlock: !FindInMap [ !FindInMap [ env, id,!Ref 'AWS::AccountId' ],a ,pub1a  ]
          Tags: 
           - Key: Name
             Value: !Sub ${Co}-${Env}-${Author}-pub1a
          VpcId: !Ref vpc # Required

      pub1c:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone: "ap-northeast-1c"
          CidrBlock: !FindInMap [ !FindInMap [ env, id,!Ref 'AWS::AccountId' ],c ,pub1c  ]
          Tags: 
           - Key: Name
             Value: !Sub ${Co}-${Env}-${Author}-pub1c
          VpcId: !Ref vpc # Required

      pri1a:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone: "ap-northeast-1a"
          CidrBlock: !FindInMap [ !FindInMap [ env, id,!Ref 'AWS::AccountId' ],a ,pri1a  ]
          Tags: 
           - Key: Name
             Value: !Sub ${Co}-${Env}-${Author}-pri1a
          VpcId: !Ref vpc # Required

      pri1c:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone: "ap-northeast-1c"
          CidrBlock: !FindInMap [ !FindInMap [ env, id,!Ref 'AWS::AccountId' ],c ,pri1c  ]
          Tags: 
           - Key: Name
             Value: !Sub ${Co}-${Env}-${Author}-pri1c
          VpcId: !Ref vpc # Required 

      # NatGateway
      ngw:
        Type: AWS::EC2::NatGateway
        Condition: createngw
        Properties:
          AllocationId: !GetAtt ngweip.AllocationId
          SubnetId: !Ref pub1a # Required
          Tags: 
           - Key: Name
             Value: !Sub ${Co}-${Env}-${Author}-ngw

      ngweip:
        Type: AWS::EC2::EIP
        Condition: createngw
        Properties:
            Domain: vpc



    # routetable
      rtbpub:
        Type: AWS::EC2::RouteTable
        Properties:
          Tags: 
           - Key: Name
             Value: rtbpub
          VpcId: !Ref vpc # Required
      # route
      pubroute:
        Type: AWS::EC2::Route
        Properties:
          DestinationCidrBlock: 0.0.0.0/0
          GatewayId: !Ref igw
          RouteTableId: !Ref rtbpub # Required

      rtbpri:
        Type: AWS::EC2::RouteTable
        Properties:
          Tags: 
           - Key: Name
             Value: rtbpri
          VpcId: !Ref vpc # Required

      # ngwroute
      ngwroute:
        Type: AWS::EC2::Route
        Condition: createngw
        Properties:
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref ngw
          RouteTableId: !Ref rtbpri # Required




      # assoiation
      assoiationpub1a:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          RouteTableId: !Ref rtbpub # Required
          SubnetId: !Ref pub1a # Required

      pubassoiationpub1c:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          RouteTableId: !Ref rtbpub # Required
          SubnetId: !Ref pub1c # Required
       

      
      assoiationpri1a:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          RouteTableId: !Ref rtbpri # Required
          SubnetId: !Ref pri1a # Required

      assoiationpri1c:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          RouteTableId: !Ref rtbpri # Required
          SubnetId: !Ref pri1c # Required







    # sg
      bassg:
        Type: AWS::EC2::SecurityGroup
        Properties:
          GroupDescription: "for bas" #Required
          GroupName: !Sub "${Co}-${Env}-${Author}-bas"
          SecurityGroupEgress: 
          - IpProtocol: -1
            FromPort: -1
            ToPort: -1
            CidrIp: 0.0.0.0/0
          SecurityGroupIngress: 
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
          Tags: 
          - Key: Name
            Value: !Sub ${Co}-${Env}-${Author}-bas
          VpcId: !Ref vpc


      websg:
        Type: AWS::EC2::SecurityGroup
        Properties:
          GroupDescription: "for web" # Required
          GroupName: !Sub "${Co}-${Env}-${Author}-web"
          SecurityGroupEgress: 
          - IpProtocol: -1
            FromPort: -1
            ToPort: -1
            CidrIp: 0.0.0.0/0
          SecurityGroupIngress: 
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          Tags: 
          - Key: Name
            Value: !Sub ${Co}-${Env}-${Author}-web
          VpcId: !Ref vpc
    # ec2
      base:
        Type: AWS::EC2::Instance
        Properties:
          ImageId: ami-030cf0a1edb8636ab
          InstanceType: !Sub ${instancetype}
          KeyName: !Sub ${keypair}
          NetworkInterfaces: 
          - AssociatePublicIpAddress: "true"
            DeviceIndex: "0"
            GroupSet: 
              - Ref: bassg
            SubnetId: !Ref pub1a
          Tags: 
          - Key: Name
            Value: !Sub ${Co}-${Env}-${Author}-bas


      web1a:
        Type: AWS::EC2::Instance
        Properties:
          ImageId: ami-030cf0a1edb8636ab
          InstanceType: !Sub ${instancetype}
          KeyName: !Sub ${keypair}
          NetworkInterfaces: 
          - AssociatePublicIpAddress: "false"
            DeviceIndex: "0"
            GroupSet: 
              - Ref: websg
            SubnetId: !Ref pri1a
          Tags: 
          - Key: Name
            Value: !Sub ${Co}-${Env}-${Author}-web1a





    # Transform:

    # Outputs:


    #   vpcop:
    #     Value: !Ref vpc 
    #     Export: 
    #       Name: vpc

    #   pub1aop:
    #     Value: !Ref pub1a
    #     Export: 
    #       Name: pub1a

    #   pub1cop:
    #     Value: !Ref pub1c
    #     Export: 
    #       Name: pub1c

    #   pri1aop:
    #     Value: !Ref pri1a
    #     Export: 
    #       Name: pri1a

    #   pri1cop:
    #     Value: !Ref pri1c
    #     Export: 
    #       Name: pri1c